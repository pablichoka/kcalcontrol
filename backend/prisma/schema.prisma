generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model roles {
  role_name  String      @id @db.VarChar(20)
  user_roles user_role[]
}

model user_role {
  user_id   Int
  role_name String @db.VarChar(20)
  Roles     roles  @relation(fields: [role_name], references: [role_name], onDelete: NoAction, onUpdate: NoAction, map: "fk_role")
  Users     users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")

  @@id([user_id, role_name])
}

model users {
  id             Int          @id @default(autoincrement())
  mobile         String       @unique(map: "uk_63cf888pmqtt5tipcne79xsbm") @db.VarChar(255)
  first_name     String       @db.VarChar(255)
  last_name      String       @db.VarChar(255)
  assets_id      Int?
  bm_data_id     Int?
  credentials_id Int?
  user_role      user_role[]
  asset          assets?      @relation("assets_of_user", fields: [assets_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk406jisi7tgpwlu4k6uav4h0bx")
  credentials    credentials? @relation(fields: [credentials_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk732k8fvdmf8q8msul077ck3a5")
  bm_data        bm_data?     @relation(fields: [bm_data_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fktqen8lvkhn2x84wagd35tfxvs")
}

model credentials {
  id            Int      @id @default(autoincrement())
  email         String   @unique(map: "uk_6pka8top3ggqmjvppakv4ygl8") @db.VarChar(255)
  password      String   @db.VarChar(255)
  password_date DateTime @db.Timestamp(6)
  username      String   @unique(map: "uk_l7xhygibdj6cgkpj2ih1jgx14") @db.VarChar(255)
  assets_id     Int?
  assets        assets?  @relation(fields: [assets_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user          users[]
}

model assets {
  id                     Int           @id @default(autoincrement())
  creation_date          DateTime      @db.Timestamp(6)
  modification_date      DateTime      @db.Timestamp(6)
  creation_person_id     Int
  modification_person_id Int
  credentials            credentials[]
  bmData                 bm_data[]
  ingredient             ingredients[]
  user                   users[]       @relation("assets_of_user")
}

model ingredients {
  id           Int        @id @default(autoincrement())
  category     String?    @db.VarChar(255)
  description  String?    @db.VarChar(255)
  type         String?    @db.VarChar(255)
  assets_id    Int?
  minerals_id  Int?
  nutrients_id Int?
  vitamins_id  Int?
  assets       assets?    @relation(fields: [assets_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk6fe3whlsxbpdqkrmkuvsms7gy")
  vitamins     vitamins?  @relation(fields: [vitamins_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk8apk6yhxwg8xfu4bao1ka023t")
  minerals     minerals?  @relation(fields: [minerals_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk8wk1awxbpt2kuyl80a0mpgunu")
  nutrients    nutrients? @relation(fields: [nutrients_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fkonxm9wwtn0qhjgbu6ms1sr5kg")
}

model bm_data {
  id          Int     @id @default(autoincrement())
  age         Int?
  base_bm     Float?
  diet_type   String? @db.VarChar(255)
  gender      String? @db.VarChar(255)
  height      Int?
  num_days_ex Int?
  total_bm    Float?
  weight      Float?
  assets_id   Int?
  assets      assets? @relation(fields: [assets_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fktbluf89juhekonrye78yh6drs")
  user        users[]
}

model nutrients {
  id                Int           @id @default(autoincrement())
  carbohydrate      Float?
  cholesterol       Float?
  fiber             Float?
  monosaturated_fat Float?
  polysaturated_fat Float?
  protein           Float?
  saturated_fat     Float?
  sugar_total       Float?
  total_lipid       Float?
  water             Float?
  Ingredients       ingredients[]
}

model minerals {
  id          Int           @id @default(autoincrement())
  calcium     Float?
  copper      Float?
  iron        Float?
  magnesium   Float?
  phosphorus  Float?
  potassium   Float?
  sodium      Float?
  zinc        Float?
  Ingredients ingredients[]
}

model vitamins {
  id          Int           @id @default(autoincrement())
  niacin      Float?
  riboflavin  Float?
  thiamin     Float?
  vitamin_a   Float?
  vitamin_b12 Float?
  vitamin_b6  Float?
  vitamin_c   Float?
  vitamin_e   Float?
  vitamin_k   Float?
  Ingredients ingredients[]
}

model ingredients_old {
  id                    Int     @id @default(autoincrement())
  alpha_carotene        Float?
  beta_carotene         Float?
  beta_cryptoxanthin    Float?
  calcium               Float?
  carbohydrate          Float?
  category              String? @db.VarChar(255)
  cholesterol           Float?
  choline               Float?
  copper                Float?
  description           String? @db.VarChar(255)
  fiber                 Float?
  iron                  Float?
  lutein_and_zeaxanthin Float?
  lycopene              Float?
  magnesium             Float?
  monosaturated_fat     Float?
  niacin                Float?
  phosphorus            Float?
  polysaturated_fat     Float?
  potassium             Float?
  protein               Float?
  retinol               Float?
  riboflavin            Float?
  saturated_fat         Float?
  selenium              Float?
  sodium                Float?
  sugar_total           Float?
  thiamin               Float?
  total_lipid           Float?
  vitamin_a             Float?
  vitamin_b12           Float?
  vitamin_b6            Float?
  vitamin_c             Float?
  vitamin_e             Float?
  vitamin_k             Float?
  water                 Float?
  zinc                  Float?
}
